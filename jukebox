#!/bin/sh
# polarhive.net/jukebox
set -e

# config
username=polarhive
mode=mix

# variables
music_folder="Music" && cd ~/$music_folder/.tmp/dl
ytargs="--ignore-config -x -q --progress"

# help
usage() {
    echo "Options:"
    echo "  -u: Play user's lastfm mix [default]"
    echo "  -a <artist>: Artist name"
    echo "  -g <genre>: Genre name"
    echo "  -s <song name by artist>: Search a song"
    echo "  -y: Use yt-music tags for songs [-u mode only]"
    echo "  -h: Display this help message"
    exit 1
}

# santizie input
clean() {
    q=$(echo $q | tr ' ' '+')
}

# quit if offline
net() {
    notify-send "network error"
    exit 1
}

# play modes
## play the user's LastFM mix: [default]
play_user() {
    response=$(curl -s "https://www.last.fm/player/station/user/${username}/${mode}") || net
    notify-send "queueing"
    loop
    notify-send "finished queueing"
    export yt=true
}

## play a specific artist
play_artist() {
    response=$(curl -s "https://www.last.fm/player/station/music/${q}") || net
    notify-send "queueing"
    loop
    notify-send "finished queueing"
}

## play a specific genre
play_genre() {
    response=$(curl -s "https://www.last.fm/player/station/tag/${q}") || net
    notify-send "queueing"
    loop
    notify-send "finished queueing"
}

## play a specified song
play_song() {
    id=$(yt-dlp --default-search "https://music.youtube.com/search?q=" "$q" --playlist-end 1 --get-id)
    yt-dlp ${ytargs} --parse-metadata "title:%(title)s" --parse-metadata "artist:%(artist)s" --add-metadata -f 'ba' -o '%(artist)s - %(title)s.%(ext)s' "$id" || notify-send "ERROR" && break
    queue
}

# parse playlist
loop() {
    length=$(jq -r '.playlist | length' <<< "$response")
    for ((i=0; i<length; i++))
    do
        id="$(jq -r ".playlist[$i].playlinks[0].id" <<< "$response")"
        a="$(jq -r ".playlist[$i].artists[0].name" <<< "$response")"
        t="$(jq -r ".playlist[$i].name" <<< "$response")"
        dl
    done
}

# download song
dl() {
    if [ "$yt" = false ]; then
        yt-dlp ${ytargs} --postprocessor-args "ffmpeg:-metadata title=${t@Q} -metadata artist=${a@Q}" -f 'ba' -o "$a - $t.%(ext)s" "$id" || notify-send "ERROR: $a — $t" && break
    else
        id=$(yt-dlp --default-search "https://music.youtube.com/search?q=" "$t by $a" --playlist-end 1 --get-id)
        yt-dlp ${ytargs} --parse-metadata "title:%(title)s" --parse-metadata "artist:%(artist)s" --add-metadata -f 'ba' -o "$a - $t.%(ext)s" "$id" || notify-send "ERROR" && break
    fi
    queue
}

# queue last song
queue() {
    rm ~/$music_folder/.tmp/dl/*.part -f
    name=$(ls -u | head -1)
    mpc -q update && mpc -q add ".tmp/dl/${name}" && mpc -q play
    echo "queueing: $a — $t"
}

# flags
while getopts ":a:g:s:yuh" opt; do
    case $opt in
        a)
            q="$OPTARG"
            clean
            play_artist
            ;;
        g)
            q="$OPTARG"
            clean
            play_genre
            ;;
        s)
            q="$OPTARG"
            play_song
            ;;
        y)
            export yt=true
            play_user
            ;;
        u)
            export yt=false
            play_user
            ;;
        h)
            usage
            ;;
        \?)
            echo "Invalid option: -$OPTARG"
            usage
            ;;
        :)
            echo "Option -$OPTARG requires an argument."
            usage
            ;;
    esac
done

# catch all: [default]
if [ $OPTIND -eq 1 ]; then
    export yt=false
    play_user
fi

